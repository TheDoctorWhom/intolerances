{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = defaultSearchTerm => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\n  const search = async term => {\n    const response = await youtube.get('/search/basic', {\n      params: {\n        keyword: term\n      }\n    }); // end of response\n\n    console.log(response);\n    setVideos(response.data.data.results);\n  }; // end of search\n\n\n  return [videos, search];\n};\n\n_s(useVideos, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\nexport default useVideos;","map":{"version":3,"sources":["/Users/Zak/Documents/Websites/netflix/src/hooks/useVideos.js"],"names":["useState","useEffect","youtube","useVideos","defaultSearchTerm","videos","setVideos","search","term","response","get","params","keyword","console","log","data","results"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfM,IAAAA,MAAM,CAACH,iBAAD,CAAN;AACD,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIF,QAAMG,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC7B,UAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,CAAY,eAAZ,EAA4B;AAC/CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAEJ;AADH;AADuC,KAA5B,CAAvB,CAD6B,CAKvB;;AACJK,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAH,IAAAA,SAAS,CAACG,QAAQ,CAACM,IAAT,CAAcA,IAAd,CAAmBC,OAApB,CAAT;AAED,GATH,CAPyC,CAgBpC;;;AAEH,SAAO,CAACX,MAAD,EAASE,MAAT,CAAP;AACD,CAnBD;;GAAMJ,S;;AAqBN,eAAeA,SAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = (defaultSearchTerm) => {\n  const [videos, setVideos] = useState([]);\n\n  useEffect (() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\nconst search = async (term) => {\n  const response = await youtube.get('/search/basic',{\n      params: {\n        keyword: term,\n      },\n    }); // end of response\n    console.log(response);\n    setVideos(response.data.data.results);\n\n  }; // end of search\n\n  return [videos, search];\n};\n\nexport default useVideos;\n"]},"metadata":{},"sourceType":"module"}