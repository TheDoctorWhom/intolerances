{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = defaultSearchTerm => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\n  const search = async (term, service, series, language) => {\n    const response = await youtube.get('', {}); // end of response\n\n    const reducedResponse = {};\n    var x;\n\n    for (x in response.data.CATALOG.LEGO) {\n      console.log(response.data.CATALOG.LEGO[x]);\n    }\n\n    setVideos(response.data.CATALOG.LEGO);\n  }; // end of search\n\n\n  return [videos, search];\n};\n\n_s(useVideos, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\nexport default useVideos;","map":{"version":3,"sources":["/Users/Zak/Documents/Websites/Lego-site/src/hooks/useVideos.js"],"names":["useState","useEffect","youtube","useVideos","defaultSearchTerm","videos","setVideos","search","term","service","series","language","response","get","reducedResponse","x","data","CATALOG","LEGO","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfM,IAAAA,MAAM,CAACH,iBAAD,CAAN;AACD,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIF,QAAMG,MAAM,GAAG,OAAOC,IAAP,EAAaC,OAAb,EAAsBC,MAAtB,EAA8BC,QAA9B,KAA2C;AACxD,UAAMC,QAAQ,GAAG,MAAMV,OAAO,CAACW,GAAR,CAAY,EAAZ,EAAe,EAAf,CAAvB,CADwD,CAElD;;AACF,UAAMC,eAAe,GAAG,EAAxB;AAEF,QAAIC,CAAJ;;AACA,SAAKA,CAAL,IAAUH,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBC,IAAhC,EAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBC,IAAtB,CAA2BH,CAA3B,CAAZ;AACD;;AACDT,IAAAA,SAAS,CAACM,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBC,IAAvB,CAAT;AAED,GAXH,CAPyC,CAkBpC;;;AAEH,SAAO,CAACb,MAAD,EAASE,MAAT,CAAP;AACD,CArBD;;GAAMJ,S;;AAuBN,eAAeA,SAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = (defaultSearchTerm) => {\n  const [videos, setVideos] = useState([]);\n\n  useEffect (() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\nconst search = async (term, service, series, language) => {\n  const response = await youtube.get('',{\n    }); // end of response\n      const reducedResponse = {};\n\n    var x;\n    for (x in response.data.CATALOG.LEGO){\n      console.log(response.data.CATALOG.LEGO[x]);\n    }\n    setVideos(response.data.CATALOG.LEGO);\n\n  }; // end of search\n\n  return [videos, search];\n};\n\nexport default useVideos;\n"]},"metadata":{},"sourceType":"module"}