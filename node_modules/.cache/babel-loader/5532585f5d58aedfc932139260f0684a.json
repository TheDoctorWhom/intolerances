{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = defaultSearchTerm => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\n  const search = async (term, searchOption) => {\n    const response = await youtube.get('', {}); // end of response\n\n    const reducedResponse = {};\n    let x;\n\n    if (searchOption === \"NAME\") {\n      for (x in response.data.intolerances) {\n        if (!response.data.intolerances[x].NAME.toLowerCase().includes(term.toLowerCase())) {\n          // console.log(response.data.CATALOG.LEGO[x]);\n          delete response.data.intolerances[x];\n        }\n      }\n    }\n\n    if (searchOption === \"NUMBER\") {\n      for (x in response.data.CATALOG.LEGO) {\n        if (!response.data.CATALOG.LEGO[x].NUMBER.toLowerCase().includes(term.toLowerCase())) {\n          // console.log(response.data.CATALOG.LEGO[x]);\n          delete response.data.CATALOG.LEGO[x];\n        }\n      }\n    }\n\n    if (searchOption === \"THEME\") {\n      for (x in response.data.CATALOG.LEGO) {\n        if (!response.data.CATALOG.LEGO[x].THEME.toLowerCase().includes(term.toLowerCase())) {\n          // console.log(response.data.CATALOG.LEGO[x]);\n          delete response.data.CATALOG.LEGO[x];\n        }\n      }\n    }\n\n    console.log(response.data.intolerances);\n    setVideos(response.data.intolerances);\n  }; // end of search\n\n\n  return [videos, search];\n};\n\n_s(useVideos, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n\nexport default useVideos;","map":{"version":3,"sources":["/Users/Zak/Documents/Websites/intolerances/src/hooks/useVideos.js"],"names":["useState","useEffect","youtube","useVideos","defaultSearchTerm","videos","setVideos","search","term","searchOption","response","get","reducedResponse","x","data","intolerances","NAME","toLowerCase","includes","CATALOG","LEGO","NUMBER","THEME","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AAAA;;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfM,IAAAA,MAAM,CAACH,iBAAD,CAAN;AACD,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;;AAIF,QAAMG,MAAM,GAAG,OAAOC,IAAP,EAAaC,YAAb,KAA8B;AAC3C,UAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAY,EAAZ,EAAe,EAAf,CAAvB,CAD2C,CAErC;;AACF,UAAMC,eAAe,GAAG,EAAxB;AAEF,QAAIC,CAAJ;;AAEA,QAAGJ,YAAY,KAAK,MAApB,EAA2B;AACzB,WAAKI,CAAL,IAAUH,QAAQ,CAACI,IAAT,CAAcC,YAAxB,EAAqC;AACnC,YAAG,CAACL,QAAQ,CAACI,IAAT,CAAcC,YAAd,CAA2BF,CAA3B,EAA8BG,IAA9B,CAAmCC,WAAnC,GAAiDC,QAAjD,CAA0DV,IAAI,CAACS,WAAL,EAA1D,CAAJ,EAAkF;AAChF;AACA,iBAAOP,QAAQ,CAACI,IAAT,CAAcC,YAAd,CAA2BF,CAA3B,CAAP;AACD;AACF;AACF;;AACD,QAAGJ,YAAY,KAAK,QAApB,EAA8B;AAC5B,WAAKI,CAAL,IAAUH,QAAQ,CAACI,IAAT,CAAcK,OAAd,CAAsBC,IAAhC,EAAqC;AACnC,YAAG,CAACV,QAAQ,CAACI,IAAT,CAAcK,OAAd,CAAsBC,IAAtB,CAA2BP,CAA3B,EAA8BQ,MAA9B,CAAqCJ,WAArC,GAAmDC,QAAnD,CAA4DV,IAAI,CAACS,WAAL,EAA5D,CAAJ,EAAoF;AAClF;AACA,iBAAOP,QAAQ,CAACI,IAAT,CAAcK,OAAd,CAAsBC,IAAtB,CAA2BP,CAA3B,CAAP;AACD;AACF;AACF;;AACD,QAAGJ,YAAY,KAAK,OAApB,EAA6B;AAC3B,WAAKI,CAAL,IAAUH,QAAQ,CAACI,IAAT,CAAcK,OAAd,CAAsBC,IAAhC,EAAqC;AACnC,YAAG,CAACV,QAAQ,CAACI,IAAT,CAAcK,OAAd,CAAsBC,IAAtB,CAA2BP,CAA3B,EAA8BS,KAA9B,CAAoCL,WAApC,GAAkDC,QAAlD,CAA2DV,IAAI,CAACS,WAAL,EAA3D,CAAJ,EAAmF;AACjF;AACA,iBAAOP,QAAQ,CAACI,IAAT,CAAcK,OAAd,CAAsBC,IAAtB,CAA2BP,CAA3B,CAAP;AACD;AACF;AACF;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACI,IAAT,CAAcC,YAA1B;AACAT,IAAAA,SAAS,CAACI,QAAQ,CAACI,IAAT,CAAcC,YAAf,CAAT;AAED,GAlCH,CAPyC,CAyCpC;;;AAEH,SAAO,CAACV,MAAD,EAASE,MAAT,CAAP;AACD,CA5CD;;GAAMJ,S;;AA8CN,eAAeA,SAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = (defaultSearchTerm) => {\n  const [videos, setVideos] = useState([]);\n\n  useEffect (() => {\n    search(defaultSearchTerm);\n  }, [defaultSearchTerm]);\n\nconst search = async (term, searchOption) => {\n  const response = await youtube.get('',{\n    }); // end of response\n      const reducedResponse = {};\n\n    let x;\n\n    if(searchOption === \"NAME\"){\n      for (x in response.data.intolerances){\n        if(!response.data.intolerances[x].NAME.toLowerCase().includes(term.toLowerCase())){\n          // console.log(response.data.CATALOG.LEGO[x]);\n          delete response.data.intolerances[x];\n        }\n      }\n    }\n    if(searchOption === \"NUMBER\" ){\n      for (x in response.data.CATALOG.LEGO){\n        if(!response.data.CATALOG.LEGO[x].NUMBER.toLowerCase().includes(term.toLowerCase())){\n          // console.log(response.data.CATALOG.LEGO[x]);\n          delete response.data.CATALOG.LEGO[x];\n        }\n      }\n    }\n    if(searchOption === \"THEME\" ){\n      for (x in response.data.CATALOG.LEGO){\n        if(!response.data.CATALOG.LEGO[x].THEME.toLowerCase().includes(term.toLowerCase())){\n          // console.log(response.data.CATALOG.LEGO[x]);\n          delete response.data.CATALOG.LEGO[x];\n        }\n      }\n    }\n    console.log(response.data.intolerances);\n    setVideos(response.data.intolerances);\n\n  }; // end of search\n\n  return [videos, search];\n};\n\nexport default useVideos;\n"]},"metadata":{},"sourceType":"module"}